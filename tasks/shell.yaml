---
- name: Install zsh
  become: true
  ansible.builtin.apt:
    state: present
    name: zsh
    update_cache: yes

- name: Install antidote plugin manager
  ansible.builtin.git:
    repo: https://github.com/mattmc3/antidote
    dest: "{{ ansible_user_dir }}/.antidote"
    version: main
    depth: 1

- name: Copy .zsh_plugins.txt
  ansible.builtin.copy:
    src: .zsh_plugins.txt
    dest: "{{ ansible_user_dir }}/.zsh_plugins.txt"
    mode: "0644"

- name: Generate zshrc
  ansible.builtin.template:
    src: templates/{{ item }}.j2
    dest: "{{ ansible_user_dir }}/.{{ item }}"
    owner: "{{ ansible_user_id }}"
    mode: "0644"
  with_items:
    - zshrc
    - zshenv

- name: Set zsh as default shell
  become: true
  ansible.builtin.user:
    name: "{{ ansible_user_id }}"
    update_password: on_create
    shell: /bin/zsh

- name: Install Starship
  block:
    - name: Ensure ~/bin directory exists
      ansible.builtin.file:
        path: "{{ ansible_user_dir }}/bin"
        state: directory
        mode: '0755'

    - name: Check if Starship is already installed
      ansible.builtin.stat:
        path: "{{ ansible_user_dir }}/bin/starship"
      register: starship_binary

    - name: Install Starship using gh cli
      when: not starship_binary.stat.exists
      block:
        - name: Get latest Starship release
          ansible.builtin.command:
            cmd: gh release download --repo starship/starship --pattern '*x86_64-unknown-linux-gnu.tar.gz' --dir /tmp
          register: starship_download

        - name: Extract Starship binary
          ansible.builtin.unarchive:
            src: "{{ starship_download.stdout_lines[0] }}"
            dest: "{{ ansible_user_dir }}/bin"
            remote_src: yes
            extra_opts: [--strip-components=1]

        - name: Set Starship binary permissions
          ansible.builtin.file:
            path: "{{ ansible_user_dir }}/bin/starship"
            mode: '0755'

        - name: Remove Starship archive
          ansible.builtin.file:
            path: "{{ starship_download.stdout_lines[0] }}"
            state: absent

    - name: Ensure Starship config directory exists
      ansible.builtin.file:
        path: "{{ ansible_user_dir }}/.config"
        state: directory
        mode: '0755'

    - name: Configure Starship with plain text symbols
      ansible.builtin.command:
        cmd: starship preset plain-text-symbols -o {{ ansible_user_dir }}/.config/starship.toml
      args:
        creates: "{{ ansible_user_dir }}/.config/starship.toml"

  rescue:
    - name: Debug - Show error
      ansible.builtin.debug:
        msg: "An error occurred during Starship installation. Please check the output above for details."

    - name: Fail the play if Starship installation failed
      ansible.builtin.fail:
        msg: "Starship installation failed. Please review the debug output and try again."

- name: Install zoxide and other utils
  become: true
  ansible.builtin.apt:
    name:
      - zoxide
      - fzf
    state: present
    update_cache: yes